/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.15
 * Generated at: 2023-01-15 13:52:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class About_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body style=\"background-color:mistyrose;\">\r\n");
      out.write("<style>\r\n");
      out.write("/*.dev\r\n");
      out.write("\r\n");
      out.write("{\r\n");
      out.write("color:green;\r\n");
      out.write("  height: 600px;\r\n");
      out.write("    width: 600px;\r\n");
      out.write("    background-color: rgba(255,255,255,0.13);\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    backdrop-filter: blur(10px);\r\n");
      out.write("    border: 2px solid rgba(255,255,255,0.1);\r\n");
      out.write("    box-shadow: 0 0 0px rgba(0,0,1,0.6);\r\n");
      out.write("     top: 50%;\r\n");
      out.write("    left: 50%;\r\n");
      out.write("    margin-left:15%;\r\n");
      out.write("}*/\r\n");
      out.write("h3\r\n");
      out.write("{\r\n");
      out.write("  font-style:sans-serif;\r\n");
      out.write("  font-size:large;\r\n");
      out.write("  margin-left:20%;\r\n");
      out.write("  margin-right:20%;\r\n");
      out.write("  color:graytext;\r\n");
      out.write("  \r\n");
      out.write("}\r\n");
      out.write("h1\r\n");
      out.write("{\r\n");
      out.write("  margin-top:3%;\r\n");
      out.write("  color:maroon;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<div class=\"dev\">\r\n");
      out.write("\r\n");
      out.write("<h1><b><i> <u><center>About The Store</center></u></i></b>  </h1>\r\n");
      out.write("<h3>The medical store management system helps in gathering the perfect \r\n");
      out.write("management in the details. The collection and storage of data with the\r\n");
      out.write(" help of this project will be sensible, obvious and simple. It also helps in \r\n");
      out.write(" understanding the management of the previous time vividly. It also helps in \r\n");
      out.write(" performing the various functions of medical store. The medical store management\r\n");
      out.write("  system is developed to provide ease in documentation, keeping records, maintaining \r\n");
      out.write("  inventory and payment in the medical store which requires proper record keeping and \r\n");
      out.write("  management. The project also helps the manager or administrator of the medical store \r\n");
      out.write("  to assess the stored information in the time of need such as for\r\n");
      out.write("    contacting the suppliers.</b> </h3><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("    <img src=\"shop.png\" width=\"304\" height=\"228\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("    <img src=\"caps.jpg\" width=\"304\" height=\"228\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("    <img src=\"syringe.jpg\" width=\"304\" height=\"228\"/>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
